<?xml version="1.0" standalone="yes"?>
<!DOCTYPE PLUGIN [
<!ENTITY origName "composerize">
<!ENTITY name "ca.composerize">
<!ENTITY author "defected07">
<!ENTITY version "20240417">
<!ENTITY md5 "8b21b7b559c00a502842e50ae63abc39">
<!ENTITY branch "add-to-ca-repo">

<!-- Current Build Archive Name/Path -->
<!-- <!ENTITY packageVER "&version;"> -->
<!ENTITY packageName "&name;-package-&version;">
<!ENTITY packageExt "txz">
<!ENTITY packageFile "&packageName;.&packageExt;">

<!-- GitHub Entities -->
<!ENTITY repoDomain "https://github.com">
<!ENTITY rawDomain "https://raw.githubusercontent.com">
<!ENTITY authorRepoPaths "&author;/unraid-plugin-&origName;">
<!ENTITY repoURLTemplate "&repoDomain;/&authorRepoPaths;">
<!ENTITY releaseURL "&rawDomain;/&authorRepoPaths;/&branch;">
<!ENTITY pluginURL "&rawDomain;/&authorRepoPaths;/&branch;/&name;.plg">
<!ENTITY packageURL "&repoDomain;/&github;/releases/download/&version;/&packageFile;">

<!-- unRAID Entities -->
<!ENTITY bootPlugins "/boot/config/plugins">
<!ENTITY bootPluginDir "&bootPlugins;/&name;">
<!ENTITY emhttpPlugins "/usr/local/emhttp/plugins">
<!ENTITY emhttpPluginDir "&emhttpPlugins;/&name;">
<!ENTITY emhttpPluginPage "CaComposerize">
<!ENTITY launch "Settings/&emhttpPluginPage;">

<!-- CA Plugin Dependencies -->
<!-- <!ENTITY dcManagerDep "compose.manager"> -->
<!-- webGui docker.compose.manager plugin -->
<!ENTITY dcManagerPluginName "compose.manager">
<!ENTITY configExt "cfg">
<!ENTITY dcManagerEmhttpPluginDir "&emhttpPlugins;/&dcManagerPluginName;">
<!ENTITY dcManagerEmhttpPluginCfg "&emhttpPlugins;/&dcManagerPluginName;/&dcManagerPluginName;.&configExt;">
<!-- unRAID docker binary -->
<!ENTITY dockerDep "docker">
<!ENTITY dockerBin "/usr/bin/&dockerDep;">
]>

<PLUGIN
    name="&name;"
    author="&author;"
    version="&version;"
    launch="&launch;"
    pluginURL="&pluginURL;"
    support="&repoURLTemplate;"
>

<CHANGES>
### 2024.05.16
- Adding to CA Repo

### 2023.11.01
- General enhancements and bug fixes
- Moved composerize to client side.
### 2022.08.01
- Initial Release
</CHANGES>

<!-- The 'pre-install' script. -->
<FILE Run="/bin/bash">
<INLINE>
    # Check for dependencies
    missingDep = 0
    if [[ ! -f "&dcManagerEmhttpPluginCfg;" ]]; then
        echo "missing requirement: &dcManagerPluginName;"
        missingDep++

    if [[ ! -f "&dockerBin;" ]]; then
        echo "missing requirement: &dockerDep;"
        missingDep++

    if [[ $missingDep gt 0 ]]; then
        exit 1

    # Remove old 'source' files
    rm -f $(ls &bootPluginDir;/&name;*.txz 2>/dev/null | grep -v '&version;')
</INLINE>
</FILE>

<FILE Name="&bootPluginDir;/&packageFile;" Run="upgradepkg --install-new">
    <URL>&releaseURL;/archive/&packageFile;</URL>
    <MD5>&md5;</MD5>
</FILE>

<FILE Run="/bin/bash">
    <INLINE>
    echo ""
    echo "----------------------------------------------------"
    echo " &name; has been installed."
    echo " Version: &version;"
    echo ""
    echo " This plugin required docker and docker compose plugins to be installed."
    echo "----------------------------------------------------"
    echo ""
    </INLINE>
</FILE>

<FILE Run="/bin/bash" Method="remove">
    <INLINE>
    removepkg &name;-&version;
    rm -r &emhttpPluginDir;
    rm -r &bootPluginDir;
    </INLINE>
</FILE>

</PLUGIN>